# Generated by Django 2.2 on 2022-07-28 16:50

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('finished', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Assessment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icainstance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentQuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('video_name', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('assessment_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.AssessmentInstance')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('video_names', models.TextField()),
                ('horizontal', models.BooleanField(default=False)),
                ('question_type', models.CharField(choices=[('MC', 'Multiple Choice'), ('SA', 'Short Answer'), ('CSA', 'Column Short Answer'), ('DD', 'Drag and Drop')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('video_link', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ShortAnswerAddition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Question')),
            ],
        ),
        migrations.CreateModel(
            name='ResponseAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_label', models.CharField(max_length=50)),
                ('given_response', models.TextField()),
                ('multiple_choice_response_string', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answered_timestamp', models.DateTimeField(editable=False, null=True)),
                ('assessment_question_response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.AssessmentQuestionResponse')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAssessmentOrdering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.PositiveSmallIntegerField(default=1)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_to_assessment', to='ica.Question')),
            ],
            options={
                'ordering': ('question_number',),
            },
        ),
        migrations.AddField(
            model_name='question',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ica.Task'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceAddition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('correct_answer', models.TextField()),
                ('incorrect_answer_1', models.TextField()),
                ('incorrect_answer_2', models.TextField()),
                ('incorrect_answer_3', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Question')),
            ],
        ),
        migrations.CreateModel(
            name='DragDropAddition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_pairs', models.PositiveSmallIntegerField(default=6)),
                ('image_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_1', to='ica.Image')),
                ('image_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_2', to='ica.Image')),
                ('image_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_3', to='ica.Image')),
                ('image_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_4', to='ica.Image')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Question')),
            ],
        ),
        migrations.CreateModel(
            name='ColumnShortAnswerAddition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_1_label', models.CharField(max_length=50)),
                ('column_2_label', models.CharField(max_length=50)),
                ('row_count', models.PositiveSmallIntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Question')),
            ],
        ),
        migrations.AddField(
            model_name='assessmentquestionresponse',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ica.Question'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='questions',
            field=models.ManyToManyField(through='ica.QuestionAssessmentOrdering', to='ica.Question'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='ica_assessment', to=settings.AUTH_USER_MODEL),
        ),
    ]
