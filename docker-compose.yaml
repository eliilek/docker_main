# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
#version: '2'

networks:
  webnet:
    driver: overlay
    attachable: true # Needed in order to run custom commands in the container

volumes:
    letsencrypt:
        name: /etc/letsencrypt
        driver_opts:
            o: "bind"
            device: "/etc/letsencrypt"
    static_volume: {}

services:
    nginx:
        restart: always
        image: nginx:latest
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./docker/certbot/www:/var/www/certbot
            - /etc/letsencrypt:/etc/letsencrypt
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    certbot:
        image: certbot/certbot:latest
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - ./docker/certbot/www/:/var/www/certbot/
            - /etc/letsencrypt:/etc/letsencrypt/
    waypoints-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/waypoints-backend/Dockerfile
        entrypoint: /app/docker/waypoints-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/waypoints-backend/django_static
        ports:
            - 25870:20587
        env_file:
            - .env
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: waypoints-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            CLOUDINARY_URL: ${C_URL}
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    nluaba-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nluaba-backend/Dockerfile
        entrypoint: /app/docker/nluaba-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/nluaba-backend/django_static
        expose:
            - 8000
        ports:
            - 2587:20587
        env_file:
            - .env
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: nluaba-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            CLOUDINARY_URL: ${C_URL_OLD}
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    jake-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/jake-backend/Dockerfile
        entrypoint: /app/docker/jake-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/jake-backend/django_static
        expose:
            - 8000
        env_file:
            - .env
        environment:
            DEBUG: "TRUE"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: jake-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    waypoints-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/waypoints-backend/Dockerfile
        entrypoint: /app/docker/waypoints-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/waypoints-backend/django_static
        env_file:
            - .env
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: waypoints-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            CLOUDINARY_URL: ${C_URL}
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        depends_on:
            - waypoints-server
            - redis

    nluaba-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nluaba-backend/Dockerfile
        entrypoint: /app/docker/nluaba-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/nluaba-backend/django_static
        env_file:
            - .env
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: nluaba-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            CLOUDINARY_URL: ${C_URL_OLD}
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        depends_on:
            - nluaba-server
            - redis

    jake-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/jake-backend/Dockerfile
        entrypoint: /app/docker/jake-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/jake-backend/django_static
        env_file:
            - .env
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kleinapp-database-do-user-17842599-0.k.db.ondigitalocean.com
            POSTGRES_NAME: jake-db
            POSTGRES_USER: doadmin
            POSTGRES_PORT: 25060
            S3_ACCESS: ${S3_ACCESS}
            S3_SECRET: ${S3_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        depends_on:
            - jake-server
            - redis
 
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine 
        expose:
            - 6379
