# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
#version: '2'

networks:
  webnet:
    driver: overlay
    attachable: true # Needed in order to run custom commands in the container

services:
    nginx:
        restart: always
        image: nginx:1.23-alpine
        ports:
            - 80:80
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/kyo-backend/django_static
    kyo-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/kyo-backend/Dockerfile
        entrypoint: /app/docker/kyo-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/kyo-backend/django_static
        expose:
            - 8000
        environment:
            DEBUG: "True"
            #CELERY_BROKER_URL: "redis://redis:6379/0"
            #CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: waypoints-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            DATABASE_URL: 'postgres://postgres:postgres@kyo-db/postgres'
            POSTGRES_PORT: 5432
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    waypoints-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/waypoints-backend/Dockerfile
        entrypoint: /app/docker/waypoints-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/waypoints-backend/django_static
        expose:
            - 8000
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: waypoints-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            DATABASE_URL: 'postgres://postgres:postgres@waypoints-db/postgres'
            POSTGRES_PORT: 5433
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    nluaba-server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nluaba-backend/Dockerfile
        entrypoint: /app/docker/nluaba-backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/nluaba-backend/django_static
        expose:
            - 8000
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: nluaba-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            DATABASE_URL: 'postgres://postgres:postgres@nluaba-db/postgres'
            POSTGRES_PORT: 5434
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    kyo-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/kyo-backend/Dockerfile
        entrypoint: /app/docker/kyo-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/kyo-backend/django_static
        environment:
            DEBUG: "True"
            #CELERY_BROKER_URL: "redis://redis:6379/0"
            #CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: kyo-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            DATABASE_URL: 'postgres://postgres:postgres@kyo-db/postgres'
            POSTGRES_PORT: 5432
        depends_on:
            - kyo-server
            - redis
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    waypoints-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/waypoints-backend/Dockerfile
        entrypoint: /app/docker/waypoints-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/waypoints-backend/django_static
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: waypoints-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            DATABASE_URL: 'postgres://postgres:postgres@waypoints-db/postgres'
            POSTGRES_PORT: 5433
        depends_on:
            - waypoints-server
            - redis
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    nluaba-worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nluaba-backend/Dockerfile
        entrypoint: /app/docker/nluaba-backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/nluaba-backend/django_static
        environment:
            DEBUG: "True"
            REDIS_URL: 'redis://redis:6379'
            DJANGO_DB: postgresql
            POSTGRES_HOST: nluaba-db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres            
            DATABASE_URL: 'postgres://postgres:postgres@nluaba-db/postgres'
            POSTGRES_PORT: 5434
        depends_on:
            - nluaba-server
            - redis
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine 
        expose:
            - 6379
    kyo-db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - kyo_postgres_data:/var/lib/postgresql/kyo-data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5432
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    waypoints-db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - waypoints_postgres_data:/var/lib/postgresql/waypoints-data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5433
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL
    nluaba-db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - nluaba_postgres_data:/var/lib/postgresql/nluaba-data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5434
        secrets:
            - S3_ACCESS
            - S3_SECRET
            - CLOUDINARY_URL

secrets:
    S3_ACCESS:
        environment: S3_ACCESS
    S3_SECRET:
        environment: S3_SECRET
    CLOUDINARY_URL:
        environment: CLOUDINARY_URL

volumes:
    static_volume: {}
    kyo_postgres_data: {}
    waypoints_postgres_data: {}
    nluaba_postgres_data: {}