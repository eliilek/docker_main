# Generated by Django 5.1.5 on 2025-01-23 20:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_column_header', models.CharField(max_length=100)),
                ('right_column_header', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_text', models.CharField(max_length=100)),
                ('right_text', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FootballAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Question Text - use {name} or {yards} to indicate the relevant name or yard line')),
                ('other_text', models.TextField(verbose_name='Text for altrustic option - use {money} to indicate the altruistic value, {name} and {yards} still valid')),
                ('selfish_text', models.TextField(verbose_name='Text for selfish option - use {money} to indicate the current selfish value, {name} and {yards} still valid')),
                ('altruistic_amount', models.SmallIntegerField(verbose_name='Amount both people get for the altruistic option')),
                ('low_selfish_amount', models.SmallIntegerField(verbose_name='Lowest selfish option will get')),
                ('high_selfish_amount', models.SmallIntegerField(verbose_name='Highest selfish option will get')),
                ('step_size', models.PositiveSmallIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ordering_number', models.PositiveSmallIntegerField(verbose_name='Ordering Number - Module 1 would be first, then ascending')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_pairs',
            field=models.ManyToManyField(to='jakeapp.activitypair'),
        ),
        migrations.CreateModel(
            name='AssessmentInstanceSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('followed_module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jakeapp.module')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('started', models.DateTimeField(default=None, null=True)),
                ('completed', models.DateTimeField(default=None, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.assessment')),
                ('instance_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.assessmentinstanceset')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='assessment_questions',
            field=models.ManyToManyField(to='jakeapp.assessmentquestion'),
        ),
        migrations.CreateModel(
            name='AssessmentSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('assessments', models.ManyToManyField(to='jakeapp.assessment')),
                ('football_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballassessment')),
            ],
        ),
        migrations.CreateModel(
            name='FootballAssessmentInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ascending', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('started', models.DateTimeField(default=None, null=True)),
                ('completed', models.DateTimeField(default=None, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballassessment')),
                ('instance_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.assessmentinstanceset')),
            ],
        ),
        migrations.CreateModel(
            name='FootballName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=8)),
                ('yards', models.PositiveSmallIntegerField()),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballassessmentinstance')),
            ],
        ),
        migrations.CreateModel(
            name='FootballAssessmentSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('completed', models.DateTimeField(null=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballassessmentinstance')),
                ('football_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballname')),
            ],
        ),
        migrations.CreateModel(
            name='FootballResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selfish_amount', models.SmallIntegerField()),
                ('selfish_choice', models.BooleanField(default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.footballassessmentsection')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering_number', models.PositiveSmallIntegerField(verbose_name='Ordering Number - Section 1 would be first, then ascending, for sections within this module')),
                ('video', models.FileField(upload_to='')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.module')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('completed', models.DateTimeField(null=True)),
                ('current_section_video_complete', models.BooleanField(default=False)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('current_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.modulesection')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleSectionRewatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(null=True)),
                ('module_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.modulesection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing_threshold', models.PositiveSmallIntegerField(default=80)),
                ('activity', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jakeapp.activity')),
                ('questions', models.ManyToManyField(to='jakeapp.question')),
            ],
        ),
        migrations.AddField(
            model_name='modulesection',
            name='quiz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jakeapp.quiz'),
        ),
        migrations.CreateModel(
            name='QuizInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.question')),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.quizinstance')),
                ('given_responses', models.ManyToManyField(to='jakeapp.response')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='correct_responses',
            field=models.ManyToManyField(related_name='correct_questions', to='jakeapp.response'),
        ),
        migrations.AddField(
            model_name='question',
            name='responses',
            field=models.ManyToManyField(to='jakeapp.response'),
        ),
        migrations.CreateModel(
            name='AssessmentQuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.assessmentinstance')),
                ('assessment_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jakeapp.assessmentquestion')),
                ('given_response', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='jakeapp.response')),
            ],
        ),
        migrations.AddField(
            model_name='assessmentquestion',
            name='responses',
            field=models.ManyToManyField(to='jakeapp.response'),
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consented', models.DateTimeField(default=None, editable=False, null=True)),
                ('current_module_instance', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jakeapp.moduleinstance')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
